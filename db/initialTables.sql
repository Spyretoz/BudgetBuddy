-- DROP TABLE IF EXISTS PRODUCT;
-- DROP TABLE IF EXISTS RETAILER;
-- DROP TABLE IF EXISTS USER_DATA;
-- DROP TABLE IF EXISTS REVIEW;
-- DROP TABLE IF EXISTS RETAILER;
-- DROP TABLE IF EXISTS PRICE_HIST;




CREATE TABLE PRODUCT (
    PROD_ID INT GENERATED ALWAYS AS IDENTITY,
    PROD_NAME VARCHAR(255) NOT NULL,
    PROD_DESCRIPTION VARCHAR(255) NOT NULL,
    PROD_CATEGORY VARCHAR(255) NOT NULL,
    PROD_BRAND varchar(255) NOT NULL,
    PROD_PRICE NUMERIC(10, 2) NOT NULL,
    PROD_YEAR SMALLINT NOT NULL,

    PRIMARY KEY(PROD_ID)
);

CREATE TABLE RETAILER (
    RETAILER_ID INT GENERATED ALWAYS AS IDENTITY,
    RETAILER_NAME VARCHAR(255) NOT NULL,
    RETAILER_LOCATION VARCHAR(255) NOT NULL,
    RETAILER_AVAILABILITY BOOLEAN, -- 0 = FALSE, 1 = TRUE
    RETAILER_PRICE NUMERIC(10, 2), -- Can be null in case product is not released yet
    RETAILER_WEBSITE VARCHAR(255) NOT NULL,
    RETAILER_CONTACT_INFO VARCHAR(255) NOT NULL,
    RETAILER_PROD_ID INT NOT NULL,

    PRIMARY KEY (RETAILER_ID),
    CONSTRAINT RETAIL_FK_PROD_ID
        FOREIGN KEY(RETAILER_PROD_ID)
            REFERENCES PRODUCT(PROD_ID)
);

CREATE TABLE USER_DATA (
    USER_ID INT GENERATED ALWAYS AS IDENTITY,
    USER_NAME VARCHAR(255) NOT NULL,
    USER_ADDRESS VARCHAR(255) NOT NULL,
    USER_EMAIL VARCHAR(255) NOT NULL,
    USER_PASSWORD VARCHAR(255) NOT NULL,

    PRIMARY KEY (USER_ID)
);

CREATE TABLE REVIEW (
    REVIEW_ID INT GENERATED ALWAYS AS IDENTITY,
    REVIEW_RATING INT NOT NULL,
    REVIEW_COMMENTS VARCHAR(255),
    REVIEW_PROD_ID INT NOT NULL,
    REVIEW_USER_ID INT NOT NULL,

    PRIMARY KEY (REVIEW_ID),
    CONSTRAINT REVIEW_FK_PROD_ID
        FOREIGN KEY(REVIEW_PROD_ID)
            REFERENCES PRODUCT(PROD_ID),
    CONSTRAINT REVIEW_FK_USER_ID
        FOREIGN KEY(REVIEW_USER_ID)
            REFERENCES USER_DATA(USER_ID)
);

CREATE TABLE PRICE_HIST (
    PRICE_HIST_ID INT GENERATED ALWAYS AS IDENTITY,
    PRICE_HIST_PRICE INT,
    PRICE_HIST_DATE DATE NOT NULL DEFAULT CURRENT_DATE,
    PRICE_HIST_PROD_ID INT NOT NULL,
    PRICE_HIST_USER_ID INT NOT NULL,

    PRIMARY KEY (PRICE_HIST_ID),
    CONSTRAINT PRICE_HIST_FK_PROD_ID
        FOREIGN KEY(PRICE_HIST_PROD_ID)
            REFERENCES PRODUCT(PROD_ID),
    CONSTRAINT PRICE_HIST_FK_USER_ID
        FOREIGN KEY(PRICE_HIST_USER_ID)
            REFERENCES USER_DATA(USER_ID)
);



INSERT INTO PRODUCT (PROD_NAME, PROD_DESCRIPTION, PROD_CATEGORY, PROD_BRAND, PROD_PRICE, PROD_YEAR)
VALUES ('Iphone 13 Mini', 'Apple 2021 latest smartphone', 'Phones', 'Apple', 850, 2021);

INSERT INTO PRODUCT (PROD_NAME, PROD_DESCRIPTION, PROD_CATEGORY, PROD_BRAND, PROD_PRICE, PROD_YEAR)
VALUES ('Iphone 14', 'Apple 2022 latest smartphone', 'Phones', 'Apple', 970, '2022');